<?xml version="1.0" encoding="UTF-8"?>
<?page id="pvmanpage"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/systemAudit.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rwglobal/jobNotes_funcs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="./jobMaker_funcs.zs" />
<zscript src="./purchaseVoucherMan_funcs.zs" />
<zscript>
<![CDATA[
MYTITLE = "Purchase Voucher Management (FOCUS)";
MYVERSION = "v0.1";
MYPANEL = "pvvhcmanpenal";
/**
 * @title Purchase voucher management, auto-insert some of the things into FOCUS
 * @author Victor Wong
 * @since 10/06/2015
 * @notes
 *
 * Purchase-vouchers automation (Development/Deployment duration 21 working days)
 * - upload of EOL/RMA items valuations produced by RWSIMPLE sub-system to FOCUS Purchase Voucher(PV)
 * - upload of items valuations purchased locally into FOCUS Purchase Voucher(PV)
 * - upload of items valuations purchased from foreign company into FOCUS Purchase Voucher(PV)
*/
import java.util.*;
import java.text.*;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

BOX_COLOR = "#3C4A5E";
BREAKDOWN_COST_BK = "#9C4570";
BREAKDOWN_COST_INPSIZE = "55px";
FOCUS_PV_VOUCHERTYPE = "768";

glob_sel_pv_listitem = glob_sel_pvitem_listitem = null;
glob_sel_pv = glob_sel_pv_item = "";
last_list_pv = 0;
edited_pv_values = false;

/**
 * PV item functions
 * @param itype button-ID
 */
void itemFunc(String itype)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	refresh = false;

	if(itype.equals("updpvitem_b")) // update per selected PV item's columns
	{
		for(i=0;i<uptbs.length;i++)
		{
			kk = kiboo.replaceSingleQuotes( uptbs[i].getValue().trim() );
			try
			{
				vv = Float.parseFloat(kk);
				lbhand.setListcellItemLabel(glob_sel_pvitem_listitem,i+2, vv.toString() );
				edited_pv_values = true;
			} catch (Exception e) {}
		}
	}

	if(itype.equals("clrupditm_b")) // clear update popup textboxes
	{
		ngfun.clearUI_Field(uptbs);
	}

	// if got selected PV items, check if user want to do MPF update
	if(lbhand.check_ListboxExist_SelectItem(pvitems_holder, "pvitems_lb"))
	{
		for(i=0; i<mpfbutts.length; i++) // scan-through MPF update butts
		{
			if(itype.equals(mpfbutts[i]))
			{
				kv = kiboo.replaceSingleQuotes( mpftextbox[i].getValue().trim() );
				if(!kv.equals(""))
				{
					try
					{
						vv = Float.parseFloat(kv); // make sure it's a number
						ltms = pvitems_lb.getSelectedItems().toArray();
						for(j=0; j<ltms.length; j++)
						{
							lbhand.setListcellItemLabel(ltms[j], i+2, vv.toString() );
						}
						edited_pv_values = true;
					} catch (Exception e) { guihand.showMessageBox("ERR: please enter numbers.."); return; }
				}
			}
		}
	}

	if(itype.equals("clrmpfboxes_b")) // clear MPF boxes
	{
		ngfun.clearUI_Field(mpftextbox);
	}
/*
	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(!lgstr.equals("")) add_RWAuditLog(EMAILINVOICE_PREFIX,"",lgstr,useraccessobj.username); // inject audit-log if not empty string
	if(refresh) showSentInvoices(last_showthing);
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
*/
}

/**
 * Submit PV massaged items values into FOCUS. Check edited_pv_values flag to determine whether any changes to PV items values.
 * If no changes, don't waste time uploading to FOCUS.
 * Focus50J1.indta : HARDCODED
 * input0 = insurance, input1 = freight, input2 = refurb cost, input3 = accm depr
 */
void submitPV_Focus()
{
	if(glob_sel_pv.equals("")) return;
	if(!edited_pv_values) { guihand.showMessageBox("No changes to PV items values, not submitting to FOCUS"); return; }

	if(Messagebox.show("This will update the changes to the PV you have made..", "Are you sure?",
		Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

	sqlstm = "";
	String[] dt = new String[6];
	kx = pvitems_lb.getItems().toArray();
	for(i=0; i<kx.length; i++)
	{
		for(j=0; j<dt.length; j++)
		{
			dt[j] = lbhand.getListcellItemLabel(kx[i],j+2);
		}
		slid = lbhand.getListcellItemLabel(kx[i],PVITMSLB_IDX_SALESID);
		bdid = lbhand.getListcellItemLabel(kx[i],PVITMSLB_BODYID);

		sqlstm += "update indta set rate=" + dt[0] + ",input0=" + dt[1] + ",input1=" + dt[2] + ",input2=" + dt[3] +
		",input3=" + dt[4] + " where salesid=" + slid + ";";

		sqlstm += "update data set originalamount=" + dt[0] + " where bodyid=" + bdid + ";";
	}

	sqlhand.rws_gpSqlExecuter(sqlstm);
	//alert(sqlstm);
	edited_pv_values = false; // reset edited flag once values injected
	guihand.showMessageBox("Updated.. reload PV voucher in FOCUS to see changes and" +
		" make sure to tab-tab for all entries to be recalculated by FOCUS");
}

/**
 * Interpolate RWSIMPLE excel worksheet, scan through worksheet asset-tags and grab cost. Worksheet columns
 * as from RWSIMPLE
 */
void interpolateRwsimple()
{
	if(pvitems_holder.getFellowIfAny("pvitems_lb") == null) return; // no listbox

	rwswk = new uploadedWorksheet();
	rwswk.getUploadFileData();
	if(rwswk.thefiledata == null)
	{
		guihand.showMessageBox("ERR: Invalid worksheet, try again");
		return;
	}

	org.apache.poi.hssf.usermodel.HSSFRow checkrow;
	Cell kcell;
	HashMap dtg = new HashMap();

	inps = new ByteArrayInputStream(rwswk.thefiledata);	
	HSSFWorkbook excelWB = new HSSFWorkbook(inps);
	FormulaEvaluator evaluator = excelWB.getCreationHelper().createFormulaEvaluator();
	wksht0 = excelWB.getSheetAt(0);
	wknumrows = wksht0.getPhysicalNumberOfRows();

	ASSET_TAG_COL = 3; // column D - asset tag
	ACCDEPR_COL = 10; // column K - accumulated depreciation
	DOCOST_COL = 8; // column I - DO cost

	for(i=0; i<wknumrows; i++) // traverse worksheet, grab column D(asset-tags) as key for hashmap, column K (accm deprn) as value
	{
		try
		{
			checkrow = wksht0.getRow(i);
			vk = "";
			try { kcell = checkrow.getCell(ASSET_TAG_COL); vk = POI_GetCellContentString(kcell,evaluator,"").trim(); } // get asset-tag - column D
			catch (Exception e) {}
			if(!vk.equals("")) // got asset-tag, get accm-deprn and do-cost
			{
				if(!dtg.containsKey(vk)) // make sure no dup ass-tag in hash
				{
					dprn = dorat = "";

					try { kcell = checkrow.getCell(ACCDEPR_COL); dprn = POI_GetCellContentString(kcell,evaluator,"").trim(); } // get accm-deprn - column K
					catch (Exception e) { dprn = "0.0"; }

					try { kcell = checkrow.getCell(DOCOST_COL); dorat = POI_GetCellContentString(kcell,evaluator,"").trim(); } // get do-cost - column I
					catch (Exception e) { dorat = "0.0"; }

					dtg.put(vk.toUpperCase(), dorat + "::" + dprn); // put into hash acc-depr and do-cost
				}
			}
		} catch (Exception e) {}
	}

	udc = 0;
	lx = pvitems_lb.getItems().toArray();
	for(i=0;i<lx.length;i++) // iterate listbox put acc-depr if any based on asset-tag in PV item description
	{
		pvi = lbhand.getListcellItemLabel(lx[i],PVITMSLB_IDX_ITEM).toUpperCase();

		Set set = dtg.entrySet();
		Iterator itr = set.iterator();

		while(itr.hasNext())
		{
			Map.Entry thisEntry = (Map.Entry)itr.next();
			ikey = thisEntry.getKey();
			ivalue = thisEntry.getValue().split("::");

			if(pvi.indexOf(ikey) != -1) // PV item description matching asset-tag in hashmap
			{
				lbhand.setListcellItemLabel(lx[i], PVITMSLB_IDX_RATE, ivalue[0] ); // rate = do-cost
				lbhand.setListcellItemLabel(lx[i], PVITMSLB_IDX_ACCMDEPR, ivalue[1] );

				edited_pv_values = true;
				udc++;
			}
		}
	}
	guihand.showMessageBox("Interpolated " + udc.toString() + " DO-cost and accumulated depreciation");
}

]]>
</zscript>

<style src="/real-world.css" />
<style>
	.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
	{
		border: none; overflow: hidden; zoom: 1;
		border-top: none; border-left: none; border-right: none; border-bottom: none;
	}
</style>

<popup id="upditem_pop">
	<div sclass="shadowbox" style="background:#ACD244;" width="300px" >
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#ACD244;">
					<label value="Rate" sclass="k9" />
					<textbox id="up_rate_tb" width="70px" />
				</row>
				<row style="background:#ACD244;">
					<label value="Insurance" sclass="k9" />
					<textbox id="up_insurance_tb" width="70px" />
				</row>
				<row style="background:#ACD244;">
					<label value="Freight" sclass="k9" />
					<textbox id="up_freight_tb" width="70px" />
				</row>
				<row style="background:#ACD244;">
					<label value="Rfb Cost" sclass="k9" />
					<textbox id="up_rfbcost_tb" width="70px" />
				</row>
				<row style="background:#ACD244;">
					<label value="Accm Depr" sclass="k9" />
					<textbox id="up_accmdepr_tb" width="70px" />
				</row>
			</rows>
		</grid>
		<separator height="3px" />
		<button id="updpvitem_b" label="Update" sclass="k9" onClick="itemFunc(self.getId())" />
		<button id="clrupditm_b" label="Clear" sclass="k9" onClick="itemFunc(self.getId())" />
	</div>
</popup>

<popup id="mpf_pop">
	<div sclass="shadowbox" style="background:#ACD244;" width="300px" >
		<label value="(Will update selected PV items)" sclass="k9" />
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#ACD244;">
					<label value="Rate" sclass="k9" />
					<textbox id="mpf_rate_tb" width="70px" />
					<button id="mpfupdrate_b" label="Update" sclass="k9" onClick="itemFunc(self.getId())" />
				</row>
				<row style="background:#ACD244;">
					<label value="Insurance" sclass="k9" />
					<textbox id="mpf_insurance_tb" width="70px" />
					<button id="mpfupdinsurance_b" label="Update" sclass="k9" onClick="itemFunc(self.getId())" />
				</row>
				<row style="background:#ACD244;">
					<label value="Freight" sclass="k9" />
					<textbox id="mpf_freight_tb" width="70px" />
					<button id="mpfupdfreight_b" label="Update" sclass="k9" onClick="itemFunc(self.getId())" />
				</row>
				<row style="background:#ACD244;">
					<label value="Rfb Cost" sclass="k9" />
					<textbox id="mpf_rfbcost_tb" width="70px" />
					<button id="mpfupdrfbcost_b" label="Update" sclass="k9" onClick="itemFunc(self.getId())" />
				</row>
				<row style="background:#ACD244;">
					<label value="Accm Depr" sclass="k9" />
					<textbox id="mpf_accmdepr_tb" width="70px" />
					<button id="mpfupdaccmdepr_b" label="Update" sclass="k9" onClick="itemFunc(self.getId())" />
				</row>
			</rows>
		</grid>
		<separator height="3px" />
		<button id="clrmpfboxes_b" label="Clear boxes" sclass="k9" onClick="itemFunc(self.getId())" />
	</div>
</popup>

<popup id="viewpo_pop">
	<div sclass="shadowbox" style="background:#ACD244;" >
		<hbox>
			<label value="RWMS PO" sclass="k9" />
			<textbox id="rwmspo_tb" width="70px" />
			<button label="Load PO" sclass="k9" onClick="loadViewPO()" />
		</hbox>
	</div>
</popup>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren style="background:#0C203E">
	<div sclass="shadowbox" style="background:${BOX_COLOR}">
		<hbox>
			<label value="Start date" sclass="k9b" />
			<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<label value="End date" sclass="k9b" />
			<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<textbox id="searhtxt_tb" sclass="k9" />
			<button label="Load/Search" sclass="k9mo" onClick="listPurchaseVoucher(1)" />
			<textbox id="bypv_tb" sclass="k9" width="70px" value="23276" />
			<button label="by PV" sclass="k9mo" onClick="listPurchaseVoucher(2)" />
		</hbox>
		<separator height="3px" />
		<div id="pvs_holder" />
	</div>
	<div id="workarea" sclass="shadowbox" style="background:${BOX_COLOR}" visible="false">
		<vbox>
			<hbox>
				<label id="selectedpv_lbl" sclass="subhead1" />
				<separator width="10px" />
				<button label="MPF" sclass="k9mo" onClick="mpf_pop.open(self)" />
				<button label="Interpolate RWSIMPLE" sclass="k9mo" onClick="interpolateRwsimple()" />
				<button label="View PO" sclass="k9mo" onClick="viewpo_pop.open(self)" />
				<button label="Re-market price list" sclass="k9mo" onClick="runMarketPrice_window()" />
				<button label="SUBMIT TO FOCUS" sclass="k9mo" style="color:#C41212" onClick="submitPV_Focus()" />
			</hbox>
			<hbox>
				<vbox>
					<div id="pvitems_holder" width="750px" />
				</vbox>
				<vbox>
					<grid>
						<rows>
							<row spans="4" style="background:${BREAKDOWN_COST_BK}">
								<label sclass="subhead1" value="Breakdown cost estimator" />
							</row>
							<row spans="1,3" style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9mo" value="Unit price" />
								<textbox id="m_unit_price" />
							</row>
							<row style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="CPU box" />
								<textbox id="m_cpubox" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
								<label sclass="k9" value="Monitor" />
								<textbox id="m_monitor" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="RAM1" />
								<textbox id="m_ram1" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
								<label sclass="k9" value="RAM2" />
								<textbox id="m_ram2" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="RAM3" />
								<textbox id="m_ram3" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
								<label sclass="k9" value="RAM4" />
								<textbox id="m_ram4" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="HDD1" />
								<textbox id="m_hdd1" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
								<label sclass="k9" value="HDD2" />
								<textbox id="m_hdd2" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="HDD3" />
								<textbox id="m_hdd3" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
								<label sclass="k9" value="HDD4" />
								<textbox id="m_hdd4" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="Battery" />
								<textbox id="m_battery" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
								<label sclass="k9" value="Adaptor" />
								<textbox id="m_adaptor" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row spans="1,3" style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9" value="Graphic" />
								<textbox id="m_graphic" sclass="k9" width="${BREAKDOWN_COST_INPSIZE}" />
							</row>
							<row spans="1,3" style="background:${BREAKDOWN_COST_BK}">
								<label sclass="k9mo" value="Remainder" />
								<textbox id="m_remainder" />
							</row>
							<row spans="4" style="background:${BREAKDOWN_COST_BK}">
								<hbox>
									<button sclass="k9mo" label="Calc" onClick="breakdownCalc(1)" />
									<button sclass="k9mo" label="Remainder to CPU-box" onClick="breakdownCalc(3)" />
									<button sclass="k9mo" label="Clear" onClick="breakdownCalc(2)" />
								</hbox>
							</row>
						</rows>
					</grid>
					<separator height="3px" />
				</vbox>
			</hbox>
		</vbox>
	</div>

	<div id="workbox" />
	<div id="winsholder" />
<zscript>
<![CDATA[

// Update PV item popup's textboxes
Object[] uptbs = { up_rate_tb, up_insurance_tb, up_freight_tb, up_rfbcost_tb, up_accmdepr_tb };

Object[] mpfbutts = { "mpfupdrate_b", "mpfupdinsurance_b", "mpfupdfreight_b", "mpfupdrfbcost_b", "mpfupdaccmdepr_b" };
Object[] mpftextbox = { mpf_rate_tb, mpf_insurance_tb, mpf_freight_tb, mpf_rfbcost_tb, mpf_accmdepr_tb };

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>
