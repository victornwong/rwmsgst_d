<?xml version="1.0" encoding="UTF-8"?>
<?page id="soaproc2_mod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rws_customer/customerManager_funcs.zs" />
<zscript>
<![CDATA[
MYTITLE = "SOA Template Processor";
MYVERSION = "v0.3.2";
MYPANEL = "soaproc2";
/**
 * Statement of Account template processor
 * @author Victor Wong
 *
 * @notes
 * Focus uses mr000 and u0000 to store customer info
 * select cust.name,cust.code,cust.code2,
 * custd.address1yh, custd.address2yh, custd.address3yh, custd.address4yh,
 * custd.telyh, custd.faxyh, custd.contactyh, custd.deliverytoyh,
 * custd.salesrepyh, custd.emailyh
 * from mr000 cust
 * left join u0000 custd on custd.extraid = cust.masterid
 * where
 * cust.type=195
 * order by cust.name
 *
 * 14/11/2013: tie to extra customer's contact-points to send SOA directly
 * 26/02/2015: tweak and optimize
 * 18/06/2015: start port to FOCUS 0J1 database
 * 01/09/2015: re-do the SOA generator, uses raw-data from FOCUS bill-wise output. no mangling required.
 * 30/09/2015: unadjusted credit = receipts and CN, requested by Mahes to put into SOA. Check accuracy, good so far
 * 19/02/2016: Rachel assert new understanding on late-payment-interest calculation based on balance instead of invoice-amount. Reprogram the generateExcelSOA3()
 * 22/02/2016: Rachel request to have another SOA without late-payment interest. Need to create another XLS template without late-payment and outstanding column
 */
import java.util.*;
import java.text.*;
import java.io.*;
import java.lang.Float;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
import java.math.BigDecimal;
import java.awt.Color;
import org.zkoss.util.media.AMedia;
import org.zkoss.zul.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler(); guihand = new GuiFuncs();
luhand = new LookupFuncs(); dmshand = new DMSFuncs();

Object mainUpload_Data = null;
ArrayList soaData = new ArrayList();

global_selected_customerid = global_selected_customername = glob_processed_filename = "";

DecimalFormat nf2 = new DecimalFormat("0.00");
DecimalFormat nf3 = new DecimalFormat("###,##0.00");
DateFormat dtfm = new SimpleDateFormat("yyyy-MM-dd");
DateFormat dtfmyr = new SimpleDateFormat("dd-MMM-yyyy");
DateFormat billwise_dtfm = new SimpleDateFormat("MM-dd-yyyy");

public class headerposition
{
	public int therow;
	public int thecolumn;
	public String myname;
	
	public headerposition(int irow, int icol, String iname)
	{
		therow = irow;
		thecolumn = icol;
		myname = iname;
	}
}

public class soaObj
{
	public String invoice_no;
	public String invoice_date;
	public String rental_due;
	public String invoice_amount;
	public String receipt_amount;
	public String balance;
	public String narration;
	public float interest_chg;
	
	public soaObj(String tinvno, String tinvdate, String trentald, String tinvamt, string trecamt, String tbalance, String inarr)
	{
		invoice_no = tinvno;
		invoice_date = tinvdate;
		rental_due = trentald;
		invoice_amount = tinvamt;
		receipt_amount = trecamt;
		balance = tbalance;
		narration = inarr;
		// TODO calc interest-charge by rental-due and today's date
		interest_chg = 0.0;
	}
}

int calcDayDiff(java.util.Date id1, java.util.Date id2)
{
	try
	{
		long diff = id2.getTime() - id1.getTime();
		long diffDays = diff / (24 * 60 * 60 * 1000);
		return (int)diffDays;
	}
	catch (Exception e) { return 0; }
}

/**
 * Callback after picking customer: fc6_CustomerSelector.zs
 */
void pickcustomer_Callback()
{
	custr = getFocus_CustomerRec(global_selected_customerid);
	intvs = custr.get("interestayh").trim();
	intrate = 21; // TODO hardcoded default interest

	if(!intvs.equals(""))
		intrate = Float.parseFloat(intvs.replaceAll("%",""));

	customer_interest.setValue(intrate.toString());

	showCustomerExtraContacts_2(global_selected_customerid,extconts_holder,"extconts_lb"); // customerManager_funcs.zs
	fillDocumentsList_2(documents_holder,FC6CUST_PREFIX,global_selected_customerid);
}

void doFunc(Object iwhat)
{
	itype = iwhat.getId();

	if(itype.equals("uploadsoa_b"))
	{
		mainUpload_Data = new uploadedWorksheet();
		mainUpload_Data.getUploadFileData();
		if(mainUpload_Data.thefiledata == null)
		{
			guihand.showMessageBox("ERR: Invalid worksheet");
			upload_filename.setValue("");
			return;
		}
		upload_filename.setValue(mainUpload_Data.thefilename);
	}

	if(itype.equals("emaildoc_b"))
	{
		if( !lbhand.check_ListboxExist_SelectItem(extconts_holder,"extconts_lb") ) return;
		if( !lbhand.check_ListboxExist_SelectItem(documents_holder,"doculinks_lb") ) return;

		if(extconts_lb.getSelectedCount() == 0 || doculinks_lb.getSelectedCount() == 0) return;
		if(useraccessobj.email.equals("")) return;

		emailmsg_tb.setValue("");
		emailsubj_tb.setValue("");
		email_pop.open(iwhat);
	}

	if(itype.equals("realemaildoc_b"))
	{
		emailDocumentFromDS(useraccessobj.email, extconts_lb.getSelectedItems(),
			doculinks_lb.getSelectedItems(), emailmsg_tb.getValue(), emailsubj_tb.getValue() );

		email_pop.close();
	}

	if(itype.equals("gensoa_narr_b")) generateExcelSOA3(1);
	if(itype.equals("gensoa_nonarr_b")) generateExcelSOA3(2);
}

// Can be moddified or make this into general-purpose func TODO
void emailDocumentFromDS(String ireplyto, Object iextcnts, Object idocs, String iemsg, String isubject)
{
	kcnts = iextcnts.toArray();
	cntseml = "";
	for(i=0; i<kcnts.length;i++)
	{
		cntseml += lbhand.getListcellItemLabel(kcnts[i],2) + ","; // HARDCODED in customerManager_funcs.extcontshds2
	}
	try { cntseml = cntseml.substring(0,cntseml.length()-1); } catch (Exception e) {}

	if(cntseml.equals("")) { guihand.showMessageBox("No email-address to send to.."); return; }

	Sql ds_sql = sqlhand.DMS_Sql();
	if(ds_sql == null) { guihand.showMessageBox("DBERR: Cannot connect to document server"); return; }

	kdcs = idocs.toArray();
	dcids = "";

	for(i=0;i<kdcs.length;i++)
	{
		dcids += lbhand.getListcellItemLabel(kdcs[i],0) + ",";
	}
	try { dcids = dcids.substring(0,dcids.length()-1); } catch (Exception e) {}

	sqlstm = "select file_name,file_data from DocumentTable where origid in (" + dcids + ")";
	drcs = ds_sql.rows(sqlstm);

	String[] tmpfnames = new String[drcs.size()];
	fncnt = 0;

	for(d : drcs)
	{
		kfilename = d.get("file_name");
		kblob = d.get("file_data");
		kbarray = kblob.getBytes(1,(int)kblob.length());
		tmpfnames[fncnt] = session.getWebApp().getRealPath("tmp/" + kfilename);
		outstream = new FileOutputStream(tmpfnames[fncnt]);
		outstream.write(kbarray);
		outstream.close();
		fncnt++;
	}
	ds_sql.close();

	cntseml += ",creditcontrol@rentwise.com"; // 06/12/2013: HARDCODE, send a copy to creditcontrol@rentwise.com
	gmail_sendEmailWithAttachment_2("", GMAIL_username, GMAIL_password, GMAIL_username, cntseml,
	isubject, iemsg, tmpfnames,ireplyto);
}

/**
 * Knockoff from generateExcelSOA2() - with changes requested by Rachel 18/02/2016
 * @param itype : 1=with interest, 2=without interest
 */
void generateExcelSOA3(int itype)
{
	try
	{
		if(mainUpload_Data == null) return;
		if(mainUpload_Data.thefiledata == null) return;
	}
	catch (Exception e) { guihand.showMessageBox("ERR: invalid worksheet"); return; }

	inps = null;

	try
	{
		//ByteArrayInputStream mybytes = new ByteArrayInputStream(mainUpload_Data.thefiledata);
		if(!(mainUpload_Data.thefiledata instanceof java.io.ByteArrayInputStream))
			inps = new ByteArrayInputStream(mainUpload_Data.thefiledata);
		else
			inps = mainUpload_Data.thefiledata;
	} catch (Exception e)
	{
		guihand.showMessageBox("ERR: cannot read worksheet, please save as MS-Excel 97-2003 xls format");
	}

	if(inps == null) return;

	org.apache.poi.hssf.usermodel.HSSFRow checkrow; Cell kcell;
	HSSFWorkbook excelWB = new HSSFWorkbook(inps); FormulaEvaluator evaluator = excelWB.getCreationHelper().createFormulaEvaluator();

	numsheets = excelWB.getNumberOfSheets(); sheet = excelWB.getSheetAt(0); numrows = sheet.getPhysicalNumberOfRows();

	Date t_rentalduedate = new Date();
	Date t_statementdate = statement_date.getValue();

	//t_rentalduedate = mydtf.parse("28-06-2016");
	//debugbox.setValue(t_rentalduedate.toString() + " :: " + t_statementdate.toString());

	sttd = kiboo.getDateFromDatebox(statement_date);
	todate = kiboo.todayISODateString();

	FOC6_COL_READ = 12;
	startscan = 8; pgadder = 4; page_break = 28; page2_break = 46; 	numc = 0;
	soa_inv_total = soa_recp_total = soa_balance_total = "";
	soaData.clear();

	TOTAL_POS = 1; VOUCHER_POS = 0; INVOICE_NO_POS = 1; INVOICE_DATE = 2; CUSTOMERNAME_POS = 3; RENTAL_DUE_POS = 4;
	INVOICE_AMNT = 5; CN_POS = 6; RECEIPT_POS = 7; BALANCE_POS = 8; NARRATION_POS = 9; REMARKS_POS = 10;

	WK_VOUCHER_COL = 0; WK_DUEDATE_COL = 1; WK_INVAMT_COL = 2; WK_RECEIPT_COL = 3; WK_BALANCE_COL = 4; WK_LATEPAYMENT_COL = 5; WK_OS_COL = 6;
	WK_AGE_COL = 7; WK_NARRATION_COL = 8;

	WK2_VOUCHER_COL = 0; WK2_DUEDATE_COL = 1; WK2_INVAMT_COL = 2; WK2_RECEIPT_COL = 3; WK2_BALANCE_COL = 4; WK2_AGE_COL = 5; WK2_NARRATION_COL = 6;

	dbg = "";
	
	for(rw=startscan; rw<numrows; rw++) // read each row of the raw-data : hardcoded to read from startscan onwards
	{
		String[] thed = new String[11];
		checkrow = sheet.getRow(rw);
		
		for(rc=1; rc<FOC6_COL_READ; rc++) // Ignore column 0, start scan worksheet column 1 -> for data
		{
			kcell = checkrow.getCell(rc);
			if(kcell != null)
			{
				try { thed[rc-1] = POI_GetCellContentString(kcell,evaluator,"#.00").trim().toUpperCase(); } catch (Exception e) { thed[rc-1] = ""; }
			}
			else
				thed[rc-1] = "";
		}

		chkv = thed[VOUCHER_POS].trim().toUpperCase();
		if(chkv.indexOf("OPB") != -1) // found OPB, Swap voucher-column
		{
			kk = thed[VOUCHER_POS]; // Take invoice-no as voucher-no, swap it
			thed[VOUCHER_POS] = thed[INVOICE_NO_POS]; 
			thed[INVOICE_NO_POS] = kk;

			if(thed[VOUCHER_POS].indexOf("RCT") != -1) // OPB and it's a RCT
			{
				thed[RECEIPT_POS] = thed[INVOICE_AMNT]; // Swap invoice-amount to receipt-amount
				thed[INVOICE_AMNT] = ""; // blank invoice-amount because it's type RCT receipt
			}
		}

		try
		{
			t_rentalduedate = dtf2.parse(thed[RENTAL_DUE_POS]);

			//if(thed[RENTAL_DUE_POS].compareTo(sttd) <= 0) // check if rental-due-date less-or-equal than selected statement's date
			datecomp = t_rentalduedate.compareTo(t_statementdate);
			//debugbox.setValue(debugbox.getValue() + "\nvno: " + thed[VOUCHER_POS] + " duestri: " + thed[RENTAL_DUE_POS] + " Statd:" + t_statementdate.toString() + " rentaldue:" + t_rentalduedate.toString() + " resu: " + datecomp.toString());
			if(datecomp <= 0)
			{ 
				soaData.add(thed); numc++;
			}
		} catch (Exception e) {}
	}

	custdetstr = "";
	custr = getFocus_CustomerRec(global_selected_customerid); // prep customer-details
	if(custr != null)
	{
		custdetstr = custr.get("name") + "\n" +
		custr.get("address1yh") + ", " + custr.get("address2yh") + "\n" +
		custr.get("address3yh") + ", " + custr.get("address4yh") + "\n" +
		"Contact: " + custr.get("contactyh") + "\n" +
		"Tel: " + custr.get("telyh") + " Fax: " + custr.get("faxyh");
		// + "\nDeliverTo: " + custr.get("deliverytoyh") + "\n" +
		//"Customer Email: " + custr.get("emailyh") + "\nSalesRep: " + custr.get("salesrepyh");
	}

	compname = custr.get("name");
	templatefn = "rwimg/soaTemplate_2.xls"; // default to late-interest template
	if(itype == 2) templatefn = "rwimg/soaTemplate_2_withoutinterest.xls"; // non-late-interest template

	inpfn = session.getWebApp().getRealPath(templatefn);
	InputStream inp = new FileInputStream(inpfn);
	Workbook wwb = WorkbookFactory.create(inp);
	Sheet wsheet = wwb.getSheetAt(0);
	FormulaEvaluator evaluator = wwb.getCreationHelper().createFormulaEvaluator();
	org.apache.poi.hssf.usermodel.HSSFRow mainhdrow = wsheet.getRow(3);
	Font wfont = wwb.createFont(); wfont.setFontHeightInPoints((short)8); wfont.setFontName("Arial");
	Font nfont = wwb.createFont(); nfont.setFontHeightInPoints((short)6); nfont.setFontName("Arial"); // narration-font

	sttds = "Statement date: " + sttd;
	dfints = "Late payment charges: " + customer_interest.getValue() + "%";

	statementdatepos = 8; // default late-interest template statement-date worksheet column
	if(itype == 2) statementdatepos = 6; // non-late-interest template

	excelInsertString(wsheet,0,0,custdetstr); // insert customer-det into worksheet
	excelInsertString(wsheet,0,statementdatepos,sttds); // insert statement date
	excelInsertString(wsheet,0,5,dfints); // insert interest rate

	if(itype == 2) excelInsertString(wsheet,3,8,""); // remove "Narration" for no-narration type

	rowcounter = 0;
	totalinterest = 0.0;
	// 0-30 Days” / “31-60 Days” / “61-90 Days” / “91-180 Days” / “181-360 days” / “Over 361 Days
	sumundef = sum0_30 = sum31_60 = sum61_90 = sum91_180 = sum181_360 = sum361_on = 0.0;
	unadjcred = 0.0;
	Date invdate, duedate;

	wkarray = soaData.toArray();
	for(i=0;i<wkarray.length;i++)
	{
		wop = wkarray[i];
		pgbreakd = false;
		voucherno = wop[VOUCHER_POS].trim().toUpperCase();
		if(voucherno.equals("")) continue;

		// 19/02/2016: Inject from FOCUS raw-data into SOA template worksheet. Work on age-days and late-payment interest calc and inject
		// Late-payment-interest based on BALANCE instead of INVOICE amount - confirmed by Rachel

		currentrow = pgadder + rowcounter;

		excelInsertString(wsheet,currentrow,WK_VOUCHER_COL,voucherno); // Inject voucher-no. into worksheet (0)
		excelInsertString(wsheet,currentrow,WK_DUEDATE_COL,wop[RENTAL_DUE_POS]); // Inject rental-due-date into worksheet (1)

		invamount = 0.0;
		try { invamount = Float.parseFloat(wop[INVOICE_AMNT]); } catch (Exception e) {}
		invamount = (invamount < 0) ? -invamount : invamount;
		if(invamount != 0) excelInsertNumber(wsheet,currentrow,WK_INVAMT_COL,nf2.format(invamount)); // (2)

		receiptamount = 0.0;
		try { receiptamount = Float.parseFloat(wop[RECEIPT_POS]); } catch (Exception e) {}
		receiptamount = (receiptamount < 0) ? -receiptamount : receiptamount;
		if(receiptamount != 0) excelInsertNumber(wsheet,currentrow,WK_RECEIPT_COL,nf2.format(receiptamount)); // (3)

		balanceamount = originalbalanceamount = 0.0;
		try { balanceamount = originalbalanceamount = Float.parseFloat(wop[BALANCE_POS]); } catch (Exception e) {}

		if(wop[INVOICE_NO_POS].indexOf("OPB") != -1 && voucherno.indexOf("RCT") != -1)
		{
			// 22/02/2016: special request by Rachel, for OPB:RCT, change balance to negative
			balanceamount = balanceamount * -1; // make it negative for OPB:RCT
		}
		else
			balanceamount = (balanceamount < 0) ? -balanceamount : balanceamount;

		if(balanceamount != 0) excelInsertNumber(wsheet,currentrow,WK_BALANCE_COL, nf2.format(balanceamount) ); // (4)

		duedate = null;
		latepaymentcharges = 0.0;
		totaloutstanding = 0.0;
		agedays = 0;

		try { duedate = (Date)dtfm.parse(wop[RENTAL_DUE_POS]); } catch (Exception e) {}
		if(duedate != null)
		{
			// Only SI,RWP,RWI will calc late-payment-interest
			if(voucherno.indexOf("SI") != -1 || voucherno.indexOf("RWP") != -1 || voucherno.indexOf("RWI") != -1)
			{
				dydff = calcDayDiff(duedate,statement_date.getValue()); // Calc age-days based on selected-statement-date
				if(dydff > 0)
				{
					try { latepaymentcharges = ( (balanceamount * Float.parseFloat(customer_interest.getValue()) / 100) / 365) * dydff;
					} catch (Exception e) {}
				}
				else
					dydff = 0;

				totaloutstanding = balanceamount + latepaymentcharges; // Calc Total OutStanding

				// 22/02/2016: Rachel confirmed for late-interest, sum-up total-outstanding
				if(itype == 1)
				{
					if(dydff < 31 && dydff >= 0) sum0_30 += totaloutstanding;
					if(dydff > 30 && dydff < 61) sum31_60 += totaloutstanding;
					if(dydff > 60 && dydff < 91) sum61_90 += totaloutstanding;
					if(dydff > 90 && dydff < 181) sum91_180 += totaloutstanding;
					if(dydff > 180 && dydff < 361) sum181_360 += totaloutstanding;
					if(dydff > 360) sum361_on += totaloutstanding;
				}

				// 22/02/2016: Rachel confirmed, for non-late-interest, sum-up balance amount
				if(itype == 2)
				{
					if(dydff < 31 && dydff >= 0) sum0_30 += balanceamount;
					if(dydff > 30 && dydff < 61) sum31_60 += balanceamount;
					if(dydff > 60 && dydff < 91) sum61_90 += balanceamount;
					if(dydff > 90 && dydff < 181) sum91_180 += balanceamount;
					if(dydff > 180 && dydff < 361) sum181_360 += balanceamount;
					if(dydff > 360) sum361_on += balanceamount;
				}

				agedays = dydff;
			}
		}

		if(voucherno.equals("UNADJUSTED CREDITS") || voucherno.equals("ON-ACCOUNT"))
		{
			unadjcred += invamount;
		}

		totaloutstanding = balanceamount + latepaymentcharges; // Calc Total OutStanding

		if(itype == 1) // late-interest template
		{
			if(latepaymentcharges != 0) excelInsertNumber(wsheet,currentrow,WK_LATEPAYMENT_COL, nf2.format(latepaymentcharges)); // (5)
			if(totaloutstanding != 0) excelInsertNumber(wsheet,currentrow,WK_OS_COL, nf2.format(totaloutstanding)); // (6)

			//if(agedays != 0) excelInsertNumber(wsheet,currentrow,WK_AGE_COL, agedays.toString()); // (7)
			excelInsertNumber(wsheet,currentrow,WK_AGE_COL, agedays.toString());
			excelInsertString(wsheet,currentrow,WK_NARRATION_COL, wop[NARRATION_POS] ); // (8)
		}

		if(itype == 2) // non-late-interest template
		{
			excelInsertNumber(wsheet,currentrow,WK2_AGE_COL, agedays.toString());
			excelInsertString(wsheet,currentrow,WK2_NARRATION_COL, wop[NARRATION_POS] );
		}

		rowcounter++;

		if(i == page_break) { pgbreakd = true; wsheet.setRowBreak(currentrow); }
		if(i > page_break)
		{
			if( ((i+page_break) % page2_break) == 0) pgbreakd = true;
		}

		if(pgbreakd) // re-gen header-row - copy from first header
		{
			wsheet.setRowBreak(currentrow);
			// org.apache.poi.hssf.usermodel.HSSFRow hdrow = wsheet.createRow(rowcounter+pgadder);
			
			columncount = 9; // default = late-interest template
			if(itype == 2) columncount = 7; // non-late-interest template

			for(ci=0;ci<columncount;ci++)
			{
				Cell hdcell = mainhdrow.getCell(ci);
				hdstr = POI_GetCellContentString(hdcell,evaluator,"#").trim();
				jhdc = excelInsertString(wsheet,rowcounter+pgadder,ci,hdstr); //POI_CellSetAllBorders(wwb,jhdc,wfont,true);
				jhdc.setCellStyle(hdcell.getCellStyle());
			}
			rowcounter++;
		}
	}

	tt_invamnt = tt_receipt = tt_balance = tt_latepayment = tt_totalos = 0.0;

	for(i=0; i<rowcounter; i++) // 01/09/2015: calc 'em totals for invoice, receipt and balance direct from output worksheet
	{
		rw = pgadder + i;
		checkrow = wsheet.getRow(rw);

		kcell = checkrow.getCell(WK_INVAMT_COL);
		try { tt_invamnt += Float.parseFloat(POI_GetCellContentString(kcell,evaluator,"#.00")); } catch (Exception e) {}

		kcell = checkrow.getCell(WK_RECEIPT_COL);
		try { tt_receipt += Float.parseFloat(POI_GetCellContentString(kcell,evaluator,"#.00")); } catch (Exception e) {}

		kcell = checkrow.getCell(WK_BALANCE_COL);
		try { tt_balance += Float.parseFloat(POI_GetCellContentString(kcell,evaluator,"#.00")); } catch (Exception e) {}

		kcell = checkrow.getCell(WK_LATEPAYMENT_COL);
		try { tt_latepayment += Float.parseFloat(POI_GetCellContentString(kcell,evaluator,"#.00")); } catch (Exception e) {}

		kcell = checkrow.getCell(WK_OS_COL);
		try { tt_totalos += Float.parseFloat(POI_GetCellContentString(kcell,evaluator,"#.00")); } catch (Exception e) {}
	}

	rowcounter++;
	totalrw = pgadder + rowcounter;

	Font tfont = wwb.createFont(); tfont.setFontHeightInPoints((short)9); tfont.setFontName("Arial"); tfont.setBoldweight(Font.BOLDWEIGHT_BOLD);

	mergs = "A" + (totalrw + 1).toString() + ":B" + (totalrw + 1).toString(); // put TOTAL row
	CellRangeAddress region = CellRangeAddress.valueOf(mergs);
	wsheet.addMergedRegion(region);

	excelInsertString(wsheet,totalrw,0,"TOTAL");
	excelInsertString(wsheet,totalrw,1,"");
	excelInsertNumber(wsheet,totalrw, WK_INVAMT_COL, nf2.format(tt_invamnt) );

	if(itype == 1)
	{
		excelInsertNumber(wsheet,totalrw, WK_OS_COL, nf2.format(tt_totalos) );
		excelInsertNumber(wsheet,totalrw, WK_LATEPAYMENT_COL, nf2.format(tt_latepayment) );
	}

	excelInsertNumber(wsheet,totalrw, WK_RECEIPT_COL, nf2.format(tt_receipt) );
	excelInsertNumber(wsheet,totalrw, WK_BALANCE_COL, nf2.format(tt_balance) );

	rowcounter += 2;
	totalrw = pgadder + rowcounter;
	nxttotalrw = totalrw + 1;
	dyclm = 0;

	String[] ageheaders = { "UNADJUSTED CREDITS", "0-30 Days", "31-60 Days", "61-90 Days", "91-180 Days", "181-360 days", "Over 361 Days" };
	Object[] agevars = { unadjcred, sum0_30, sum31_60, sum61_90, sum91_180, sum181_360, sum361_on };

	for(j=0; j<7; j++) // insert those 0-30 days and so on at the end of the SOA
	{
		excelInsertString(wsheet,totalrw,j,ageheaders[j]);
		kval = nf2.format( ((agevars[j] < 0) ? -agevars[j] : agevars[j]) ) ; //kval = (j == 0) ? nf2.format( agevars[j] * -1) : agevars[j].toString();
		excelInsertNumber(wsheet,nxttotalrw,j,kval);
	}

	kktot = (sum0_30 + sum31_60 + sum61_90 + sum91_180 + sum181_360 + sum361_on) + unadjcred;

	excelInsertString(wsheet,totalrw,dyclm+7,"TOTAL");
	excelInsertNumber(wsheet,nxttotalrw,dyclm+7, nf2.format(kktot) );

	duestr = "REMINDER:\nWe would like to bring to your attention that your account of RM" + nf3.format(kktot) +
	" has exceeded the due date.\nWe hope to receive your payment within 14 days from the date of this statement " +
	"to avoid service suspension.\nPlease ignore this reminder if payment has been made.";
	excelInsertString(wsheet,1,5,duestr);

	if(compname.length() > 15) compname = compname.substring(0,15).trim();
	compname = compname.replaceAll(" ","_"); //compname = compname.replaceAll("\\","_");
	compname = compname.replaceAll("/","_");

	DateFormat fndfmt = new SimpleDateFormat("MMMyyyy");
	kdte = fndfmt.format(statement_date.getValue());

	wointerest = "";
	if(itype == 2) wointerest = "woint_"; // non-late-interest template

	tfname = compname + "_SOA_" + wointerest + kdte + ".xls";
	outfn = session.getWebApp().getRealPath("tmp/" + tfname);
	FileOutputStream fileOut = new FileOutputStream(outfn);
	wwb.write(fileOut);
	fileOut.close();

	glob_processed_filename = outfn; // for later usage
	generated_lbl.setValue(tfname);

	// 14/11/2013: save a copy of the SOA by customer-id : global_selected_customerid set when user select a customer from popup
	saveFileToDMS( FC6CUST_PREFIX + global_selected_customerid, tfname, outfn, "application/vnd.ms-excel","xls" );
	fillDocumentsList_2(documents_holder,FC6CUST_PREFIX,global_selected_customerid);

	//downloadFile(kasiexport,tfname,outfn); // rwsqlfuncs.zs TODO need to move this
	upload_filename.setValue(""); // once processed, clear the imported raw-data worksheet
}

]]>
</zscript>

<popup id="email_pop">
	<div sclass="shadowbox" style="background:#f9b12d;" width="450px" >
		<grid>
			<rows>
				<row>
					<label value="Subject" />
					<textbox id="emailsubj_tb" width="99%" />
				</row>
				<row spans="2">
					<label value="Email message" />
				</row>
				<row spans="2">
					<textbox id="emailmsg_tb" multiline="true" width="99%" height="60px" />
				</row>
			</rows>
		</grid>
		<separator height="2px" />
		<button id="realemaildoc_b" label="Send attachments and email-message" onClick="doFunc(self)" />
	</div>
</popup>

<popup id="pickcustomer_popup">
	<div sclass="shadowbox" style="background:#f9b12d;">
		<hbox>
			<label sclass="k9">Customer name</label>
			<textbox id="searchcust_tb" sclass="k9" />
			<button label="Find" sclass="k9" onClick="findCustomers()" />
		</hbox>
		<separator height="2px" />
		<hbox>
			<div id="foundcusts_holder" width="400px" />
			<separator width="5px" />
			<div width="400px" id="custfound_wa" visible="false" >
				<label id="fcustomername" style="font-size:13px;font-weight:bold;text-decoration:underline" />
				<separator height="2px" />
				<label id="fcustomerdetails" multiline="true" width="99%" height="100px" style="font-weight:bold" />
				<separator height="3px" />
				<button label="Select this customer" sclass="k9" onClick="assignCustomer()" />
			</div>
		</hbox>
		<label id="selectcustid" visible="false" />
	</div>
</popup>

<popup id="updatefiledesc_popup">
	<groupbox width="400px">
		<caption id="updatefiledesc_label" />
		<label value="Description" sclass="k9" />
		<textbox id="update_file_description" multiline="true" height="70px" width="99%" sclass="k9" />
		<separator height="3px" />
		<hbox>
			<button label="Update" sclass="k9" onClick="updateFileDescription(documents_holder,FC6CUST_PREFIX,global_selected_customerid)" />
			<button label="Close" sclass="k9" onClick="updatefiledesc_popup.close()" />
		</hbox>
	</groupbox>
</popup>

<popup id="uploadfile_popup">
	<groupbox>
	<caption label="Upload a file" />
		<grid>
			<rows>
				<row>
					<label value="Filename" sclass="k9" />
					<textbox id="fileupl_file_title" width="200px" sclass="k9" />
				</row>
				<row>
					<label value="Description" sclass="k9" />
					<textbox id="fileupl_file_description" multiline="true" height="60px" width="200px" sclass="k9" />
				</row>
			</rows>
		</grid>
	</groupbox>
	<separator height="3px" />
	<hbox>
		<button label="Select file" onClick="uploadFile(documents_holder,FC6CUST_PREFIX,global_selected_customerid)" sclass="k9" />
		<button label="Close" onClick="uploadfile_popup.close()"  sclass="k9" />
	</hbox>
</popup>

<style src="/real-world.css" />

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren>
	<div sclass="shadowbox" style="background:#1b528c;" >
		<hbox>
			<button id="selcustomer_b" label="Select customer" sclass="k9mo" onClick="pickcustomer_popup.open(self)" />
			<button id="uploadsoa_b" label="Upload SOA from FOCUS6" sclass="k9mo" onClick="doFunc(self)" />
			<button id="gensoa_narr_b" label="Gen SOA with interest" sclass="k9mo" onClick="doFunc(self)" />
			<button id="gensoa_nonarr_b" label="Gen SOA without interest" sclass="k9mo" onClick="doFunc(self)" />
		</hbox>
		<separator height="5px" />
		<hbox>
			<grid width="500px">
				<rows>
					<row>
						<label value="Interest rate" sclass="k9mo" />
						<label id="customer_interest" sclass="k9" />
						<label>Statement date</label>
						<datebox id="statement_date" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self);" />
					</row>
					<row>
						<label value="Uploaded file" sclass="k9" />
						<label id="upload_filename" sclass="k9" />
						<label>Generated</label>
						<label id="generated_lbl" style="text-decoration:blink" />
					</row>
				</rows>
			</grid>
		</hbox>
		<separator height="10px" />

		<div style="background:#e58512;padding:2px">
			<label id="customername" sclass="subhead1" style="color:#ffffff" />
		</div>
		<separator height="3px" />

		<hbox>
			<div sclass="shadowbox" style="background:#555753;">
				<label sclass="subhead1" style="color:#ffffff">ATTACHMENT / DOCUMENTS</label>
				<separator height="3px" />
				<hbox>
					<button id="viewdoc_btn" label="View file" sclass="k9" onClick="viewFile()" />
					<button id="deletedoc_btn" label="Delete" sclass="k9"
						onClick="deleteFile(documents_holder,FC6CUST_PREFIX,global_selected_customerid)" />
				</hbox>
				<separator height="3px" />
				<div id="documents_holder" width="550px" />
			</div>

			<div sclass="shadowbox" style="background:#555753;">
				<label sclass="subhead1" style="color:#ffffff" value="Contact Person" />
				<separator height="3px" />
				<button id="emaildoc_b" label="Email document to selected contact-persons" sclass="k9mo" onClick="doFunc(self)" />
				<separator height="3px" />
				<div id="extconts_holder" width="600px" />
			</div>
		</hbox>
	</div>

<label id="debugbox" multiline="true" />
<div id="kasiexport" visible="false" />

<zscript>
<![CDATA[

if(useraccessobj.accesslevel == 9)
{
	searchcust_tb.setValue("SENARI SYNERGY");
}

/*
	wkarray = soaData.toArray();
	dbg = "";
	for(i=0;i<wkarray.length;i++)
	{
		m = wkarray[i];
		for(k=0; k<m.length; k++)
		{
			dbg += m[k] + " :: ";
		}
		dbg += "\n";
	}

	dbg += "\nsoa_inv_total = " + soa_inv_total + " :: soa_recp_total = " + soa_recp_total + " :: soa_balance_total = " + soa_balance_total;
	debugbox.setValue(dbg);
	return;
 */

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>
