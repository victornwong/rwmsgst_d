<?xml version="1.0" encoding="UTF-8"?>
<?page id="specuipdyt"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/systemAudit.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rwglobal/jobNotes_funcs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="../rws_warehouse/goodsreceive/goodsrecv_funcs.zs" />
<zscript src="../rws_warehouse/goodsreceive/injtest.zs" />
<zscript src="./specUpdate_funcs.zs" />
<zscript src="./injectTempGRN.zs" />
<zscript>
<![CDATA[
MYTITLE = "Items Spec Update";
MYVERSION = "v0.1";
MYPANEL = "itmspecupdpanl";
/**
 * @title Inventory items spec update - like in FOCUS
 * @author Victor Wong
 * @since  30/09/2014
 */
import java.util.*;
import java.text.*;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

TESTING_MODE = true;

String[] scanitems_colws = { "30px","250px","90px","90px",
"80px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"150px",
"50px",
"50px",
"50px",
"50px"
};
String[] scanitems_collb = { "","Item name","Asset tag","Serial",
"Grd",
"Brand",
"Type",
"Model",
"Processor",
"M.Size",
"M.Type",
"Color",
"Case",
"COA",
"COA2",
"RAM",
"HDD",
"CDROM1",
"Comment",
"Webcam",
"B.Tooth",
"F.Print",
"C.Reader"
 };

String[] specs_fields = {
"grade","Brand", "Item", "Model", "Processor", "MonitorSize", "MonitorType",
"colour", "casing", "COA", "COA2", "RAM", "HDD", "Cdrom1", "Comment",
"Webcam","B.Tooth","F.Print","C.Reader" };

String[] specs_sql_fields = {
"GradeYH","BrandYH","ItemTypeYH","ModelYH","ProcessorYH","MonitorSizeYH","MonitorTypeYH",
"ColourYH","CasingYH","COA1YH","COA2YH","RAMSizeYH","HDDSizeYH","CD1YH","CommentsYH",
"WebcamYH","BluetoothYH","FingerPrintYH","CardReaderYH" };

String[] specs_field_type = {
"lb", "tb","tb","tb","tb","tb", "tb","tb","tb","tb","tb", "tb","tb","tb","tb",
"tb","tb","tb","tb"
};

String[] specs_mpf_names = {
	"m_grd", "m_brand", "m_type", "m_model", "m_processor", "m_msize", "m_mtype",
	"m_color", "m_case", "m_coa", "m_coa2", "m_ram", "m_hdd", "m_cdrom1", "m_comment",
	"m_webcam", "m_btooth", "m_fprint", "m_creader"
};

GRN_PREFIX = "GRN";

last_showgrn_type = 1;
glob_sel_grn = glob_sel_stat = glob_sel_auditstat = "";

//showgrn_extra_sql = " and status='STKIN' "; // use in goodsrecv_funcs.showGRN() to filter
showgrn_extra_sql = "";
grn_show_meta = false; // used in goodsrecv_funcs.grnclicker to show grn-metadata or not

void grn_Selected_Callback() // call-back in goodsrecv_funcs.grnclicker
{
	showGRN_things(glob_sel_grn);
	toggButts_specupdate( (glob_sel_auditstat.equals("POST")) ? true : false );
}

String JN_linkcode()
{
	if(glob_sel_grn.equals("")) return "";
	return GRN_PREFIX + glob_sel_grn;
}

void sumbatStockName(String istockname, String itype)
{
	checkstock_pop.close();
	try
	{
		jk = grn_rows.getChildren().toArray();
		for(i=0;i<jk.length;i++)
		{
			ki = jk[i].getChildren().toArray();
			if(ki[0].isChecked())
			{
				ki[1].setValue(istockname);
				ki[6].setValue(itype);
			}
		}
	} catch (Exception e) {}
}

class itmdoubleclik implements org.zkoss.zk.ui.event.EventListener
{
	// update item-name and item-type in mel_inventory when user ddclick the stock-item
	public void onEvent(Event event) throws UiException
	{
		isel = event.getTarget();
		ifnd = lbhand.getListcellItemLabel(isel,1);
		ityp = lbhand.getListcellItemLabel(isel,2);
		sumbatStockName(ifnd,ityp);
	}
}
checkitems_doubleclicker = new itmdoubleclik();

void showCheckstock_win(Div idiv) // knockoff from jobsheet_funcs.zs but modified
{
	Object[] cstkhds1 =
	{
		new listboxHeaderWidthObj("No.",true,"40px"),
		new listboxHeaderWidthObj("Items found",true,""),
		new listboxHeaderWidthObj("Type",true,"40px"),
	};
	String[] fl_t1 = { "name", "item" };

	kn = kiboo.replaceSingleQuotes( chkstkname_tb.getValue().trim() );
	if(kn.equals("")) return;

	Listbox newlb = lbhand.makeVWListbox_Width(idiv, cstkhds1, "chkstock_lb", 3);

	csqlstm = "select distinct name,item from partsall_0 " +
	"where name like '%" + kn + "%' group by name,item order by item,name";

	r = sqlhand.rws_gpSqlGetRows(csqlstm);
	if(r.size() == 0) return;
	newlb.setMold("paging"); newlb.setRows(20);
	ArrayList kabom = new ArrayList();
	lnc = 1;
	for(d : r)
	{
		kabom.add(lnc.toString() + "." );
		ngfun.popuListitems_Data(kabom,fl_t1,d);
		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false","");
		kabom.clear();
		lnc++;
	}

	if(checkitems_doubleclicker != null) // set double-cliker if available
		lbhand.setDoubleClick_ListItems(newlb, checkitems_doubleclicker);
}

void grnFunc(String itype)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	unm = useraccessobj.username;

	if(itype.equals("shwauditlogs_b"))
	{
		showSystemAudit(auditlogs_holder,JN_linkcode(),"");
		auditlogs_pop.open(shwauditlogs_b);
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showGRN(last_showgrn_type);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void itemFunc(String itype)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	unm = useraccessobj.username;

	if(itype.equals("sourcepecs_b")) // Source specs from Focus
	{
		if(Messagebox.show("Sourcing for previous specs will overwrite whatever you've inserted..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		sourcePrevious_NameSerials();
	}

	if(itype.equals("savespecs_b")) // save the specs into rw_grn ONLY
	{
		if(glob_sel_grn.equals("")) return;
		if(saveSpecs())
		{
			msgtext = "OK: Specs saved..";
		}
	}

	// TODO need to check whether already uploaded tempGRN !!
	if(itype.equals("postspecs_b")) // post SPECS into u0001 and upload tempGRN
	{
		if(glob_sel_grn.equals("")) return;

		if(Messagebox.show("Posting specs and insert Temp.GRN into FOCUS, you cannot change anything after this..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

		pasettags = updateInventory_AuditItems();

		if(!pasettags.equals("")) // got some asset-tags returned for further processing
		{
			if(postSpecs()) // post-specs and if ok inject Temp.GRN
			{
				tempgrn = inject_FC6GRN(pasettags);

				if(!tempgrn.equals("")) // temp.grn inserted into FOCUS
				{
					toggButts_specupdate(true);
					add_RWAuditLog(JN_linkcode(),"", "Posted specs-update and upload FOCUS TempGRN " + tempgrn, useraccessobj.username);

					sqlstm = "update rw_grn set audit_date='" + todaydate + "', audit_stat='POST', audit_user='" + unm + "',fc_tempgrn='" + tempgrn + "' where origid=" + glob_sel_grn; // update the rw_grn.audit* fields
					msgtext = "OK: Specs posted and TempGRN : " + tempgrn + " uploaded into FOCUS.";
				}
			}
		}
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showGRN(last_showgrn_type);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void adminFunc(String itype)
{
	adminpop.close();
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	unm = useraccessobj.username;

	if(glob_sel_grn.equals("")) return;

	if(itype.equals("clearaudit_b"))
		sqlstm = "update rw_grn set audit_date=null, audit_stat=null, audit_user=null where origid=" + glob_sel_grn;

	if(itype.equals("cleartmpgrn_b"))
		sqlstm = "update rw_grn set fc_tempgrn=null where origid=" + glob_sel_grn;

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showGRN(last_showgrn_type);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

]]>
</zscript>

<popup id="auditlogs_pop">
	<div sclass="shadowbox" style="background:#ef2929;" width="500px" >
		<label sclass="subhead" value="Audit Logs" />
		<separator height="3px" />
		<div id="auditlogs_holder" />
		<separator height="3px" />
		<button label="Ok" sclass="k9" onClick="auditlogs_pop.close()" />
	</div>
</popup>

<popup id="mpf_pop">
	<div sclass="shadowbox" style="background:#ABC11B" width="500px">
		<label value="(Mass update ticked items)" />
		<button label="Clear boxes" sclass="k9" onClick="mpf_clearBoxes()" />
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#ABC11B">
					<label value="Grd" sclass="k9" />
					<textbox id="m_grd" sclass="k9" />
					<button id="bm_grd" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="Brand" sclass="k9" />
					<textbox id="m_brand" sclass="k9" />
					<button id="bm_brand" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="Type" sclass="k9" />
					<textbox id="m_type" sclass="k9" />
					<button id="bm_type" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="Model" sclass="k9" />
					<textbox id="m_model" sclass="k9" />
					<button id="bm_model" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="Processor" sclass="k9" />
					<textbox id="m_processor" sclass="k9" />
					<button id="bm_processor" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="M.Size" sclass="k9" />
					<textbox id="m_msize" sclass="k9" />
					<button id="bm_msize" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="M.Type" sclass="k9" />
					<textbox id="m_mtype" sclass="k9" />
					<button id="bm_mtype" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="Color" sclass="k9" />
					<textbox id="m_color" sclass="k9" />
					<button id="bm_color" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="Case" sclass="k9" />
					<textbox id="m_case" sclass="k9" />
					<button id="bm_case" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="COA" sclass="k9" />
					<textbox id="m_coa" sclass="k9" />
					<button id="bm_coa" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="COA2" sclass="k9" />
					<textbox id="m_coa2" sclass="k9" />
					<button id="bm_coa2" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="RAM" sclass="k9" />
					<textbox id="m_ram" sclass="k9" />
					<button id="bm_ram" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="HDD" sclass="k9" />
					<textbox id="m_hdd" sclass="k9" />
					<button id="bm_hdd" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="CDROM1" sclass="k9" />
					<textbox id="m_cdrom1" sclass="k9" />
					<button id="bm_cdrom1" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="Comment" sclass="k9" />
					<textbox id="m_comment" sclass="k9" />
					<button id="bm_comment" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="Webcam" sclass="k9" />
					<textbox id="m_webcam" sclass="k9" />
					<button id="bm_webcam" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B">
					<label value="B.Tooth" sclass="k9" />
					<textbox id="m_btooth" sclass="k9" />
					<button id="bm_btooth" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />

					<label value="F.Print" sclass="k9" />
					<textbox id="m_fprint" sclass="k9" />
					<button id="bm_fprint" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
				<row style="background:#ABC11B" spans="1,1,4">
					<label value="C.Reader" sclass="k9" />
					<textbox id="m_creader" sclass="k9" />
					<button id="bm_creader" label="Updt" sclass="k9" onClick="mpfUpdate_specs(self)" />
				</row>
			</rows>
		</grid>
	</div>
</popup>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#E2241C">
		<vbox>
			<button id="clearaudit_b" label="Clear specs-post" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<button id="cleartmpgrn_b" label="Clear Temp.GRN" sclass="k9mo" onClick="adminFunc(self.getId())" />
		</vbox>
	</div>
</popup>

<popup id="checkstock_pop">
	<div sclass="shadowbox" style="background:#ABC11B" width="500px">
		<hbox>
			<label value="Item" sclass="k9" />
			<textbox id="chkstkname_tb" sclass="k9" />
			<button label="Check stock-name" sclass="k9" onClick="showCheckstock_win(stkname_holder)" />
		</hbox>
		<separator height="2px" />
		<div id="stkname_holder" />
	</div>
</popup>

<style src="/real-world.css" />
<style>
	.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
	{
	border: none; overflow: hidden; zoom: 1;
	border-top: none; border-left: none; border-right: none; border-bottom: none;
	}
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" onClose="panel_Close()">
<panelchildren style="background:#356AAC">
	<div sclass="shadowbox" style="background:#7F0850">
		<hbox style="padding:3px">
			<label value="Start date" sclass="k9b" />
			<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<label value="End date" sclass="k9b" />
			<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />

			<textbox id="searhtxt_tb" width="150px" sclass="k9" />
			<button label="Load/Find" sclass="k9mo" onClick="showGRN(1)" />

			<textbox id="assettag_by" width="60px" sclass="k9" />
			<button label="by asset-tag" sclass="k9mo" onClick="showGRN(3)" />

			<textbox id="grnid_tb" width="50px" sclass="k9" />
			<button label="by GRN" sclass="k9mo" onClick="showGRN(2)" />

			<button id="shwauditlogs_b" label="AuditLog" sclass="k9mo" onClick="grnFunc(self.getId())" />

			<button id="admin_b" label="ADMIN" sclass="k9mo" style="color:#D60D0D" visible="false" onClick="adminpop.open(self)" />
		</hbox>
	</div>

	<div sclass="shadowbox" style="background:#36427F">
		<hbox visible="false">
			<button id="newgrn_b" label="New GRN" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="remgrn_b" label="Remove" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="commgrn_b" label="Commit" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="uptstock_b" label="UPDATE INVENTORY" sclass="k9mo" style="color:#D41212" onClick="grnFunc(self.getId())" visible="false" />
			<separator width="10px" />
		</hbox>
		<separator height="3px" />
		<div id="grnheaders_holder" />
	</div>

	<separator height="3px" />

	<div id="workarea" sclass="shadowbox" style="background:#4B7F08" visible="false">
		<hbox>
			<button id="getstkname_b" label="Get stock-name" sclass="k9mo" onClick="checkstock_pop.open(self)" />
			<button id="savespecs_b" label="SAVE specs" sclass="k9mo" onClick="itemFunc(self.getId())" />
			<button id="sourcepecs_b" label="Source previous" sclass="k9mo" onClick="itemFunc(self.getId())" />
			<button id="mpfbutt" label="MPF" sclass="k9mo" onClick="mpf_pop.open(self)" />
			<separator width="10px" />
			<button id="postspecs_b" label="POST specs / Upload Temp.GRN" sclass="k9mo" style="color:#CD3A3A" onClick="itemFunc(self.getId())" />
		</hbox>
		<separator height="3px" />
		<div sclass="shadowbox" style="background:#36427F;overflow:auto;overflow-y:hidden" >
			<div id="scanitems_holder" width="1500px" />
		</div>
	</div>

<zscript>
<![CDATA[

ngfun.checkMakeGrid(scanitems_colws, scanitems_collb, scanitems_holder, "grn_grid", "grn_rows", "", "", false);

if(useraccessobj.accesslevel == 9)
{
	admin_b.setVisible(true);
}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

